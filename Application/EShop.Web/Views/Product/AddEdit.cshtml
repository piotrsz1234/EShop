@Scripts.Render("~/bundles/Product/AddEdit")

@using EShop.Core.Entities;
@model Tuple<EShop.Dtos.Product.Dtos.ProductDto, List<Category>>

<div class="row">
    <div class="col-sm-8 col-sm-push-2">
        @using (Html.BeginForm("AddEdit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label">Name</label>
                    <input class="form-control" name="Name" required value="@(Model.Item1 != null ? Model.Item1.Name : string.Empty)" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label">Category</label>
                    <select class="form-control" name="CategoryId" required>
                        @foreach (var item in Model.Item2)
                        {
                            <option value="@item.Id">
                                @item.Name
                            </option>
                        }
                    </select>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label" for="Price">Price</label>
                    <div class="controls">
                        <input class="form-control" data-val="true" data-val-number="The field Price must be a number." data-val-required="The Price field is required." id="Price" name="Price" type="text" value=@(Model.Item1 != null ? Model.Item1.Price.ToString() : "0.99") />
                        <span class="field-validation-valid help-inline" data-valmsg-for="Price" data-valmsg-replace="true"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <label class="form-label">Description</label>
                    <input class="form-control" name="Description" required value="@(Model.Item1 != null ? Model.Item1.Description : string.Empty)" />
                </div>
            </div>
            <div class="row">
                <div class="mb-3">
                    <label class="form-label">Small image</label>
                    <input class="form-control" name="SmallImage" type="file" >
                </div>
            </div>
            <div class="row">
                <div class="mb-3">
                    <label class="form-label">Big image</label>
                    <input class="form-control" name="BigImage" type="file">
                </div>
            </div>

            <div class="row">
                <div class="col-12" id="extraFiles">
                    <template id="customFileTemplate">
                        <div class="row">
                            <div class="col-6">
                                <div class="mb-3">
                                    <label class="form-label">Custom file</label>
                                    <input class="form-control" name="File_{0}" type="file">
                                </div>
                            </div>
                            <div class="col-6">
                                <label class="form-label">File Description</label>
                                <input class="form-control" name="FileNames[{0}]" required />
                            </div>
                        </div>
                    </template>
                </div>
            </div>
            <div class="row">
                <div class="col-12 text-end">
                    <div class="btn btn-secondary" id="btnAddFile">Add custom file</div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <button class="btn btn-primary">Save</button>
                </div>
            </div>
        }
    </div>
</div>